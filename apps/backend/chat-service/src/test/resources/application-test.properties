
spring.datasource.url=jdbc:postgresql://localhost:5432/chat_system?sslmode=disable
spring.datasource.username=admin
spring.datasource.password=admin
spring.datasource.default.schema=localhost
spring.datasource.global.schema=platform

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = create
logging.level.org.springframework=INFO
logging.level.org.hibernate.SQL=INFO
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

seederservice.seed=true
seederservice.seed-generated=false

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.batch_size=100
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

spring.devtools.restart.enabled=true

cloud.aws.credentials.accessKey=${TEST_CLOUD_AWS_ACCESS_KEY}
cloud.aws.credentials.secretKey=${TEST_CLOUD_AWS_SECRET_KEY}
private.bucket.name=${TEST_PRIVATE_BUCKET_NAME}

# ELK stack enable/disable flag
log.elk.enabled=false
log.elk.host=${TEST_LOG_ELK_HOST}
log.elk.port=${TEST_LOG_ELK_PORT}

# Database Health Check Properties
database.health-check.enabled=false

# Redis
spring.data.redis.host=localhost
spring.data.redis.port=6379

# swagger api-docs base url
swagger.backend-main.json-url=http://localhost:3010

# Allowed all origins to access backend
allowed-origins=*

# Health check endpoint security keys
health-check.redis-status.secret-key=${TEST_HEALTH_CHECK_REDIS_SECRET_KEY}
health-check.commit-info.secret-key=${TEST_HEALTH_CHECK_COMMIT_INFO_SECRET_KEY}

aws.cognito.userPoolId=${TEST_AWS_COGNITO_JWKS_URL}
aws.cognito.region=${TEST_AWS_COGNITO_REGION}
aws.cognito.jwks=${TEST_AWS_COGNITO_JWKS_URL}
aws.cognito.clientId=${TEST_AWS_COGNITO_CLIENT_ID}

ws.allowed-origins=*

# Firebase service account path
firebase.service.account.path=/firebase/chat-app-service-account.json

# Unit test configuration
unitTest.tenant.id=localhost
unitTest.chat.user.admin.email=${TEST_CHAT_ADMIN_EMAIL}
unitTest.chat.user.admin.password=${TEST_CHAT_ADMIN_PASSWORD}
unitTest.chat.user.participant.email=${TEST_CHAT_PARTICIPANT_EMAIL}
unitTest.chat.user.participant.password=${TEST_CHAT_PARTICIPANT_PASSWORD}